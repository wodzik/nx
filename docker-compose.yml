version: "3.3"

services:

  traefik:
    image: "traefik:v2.10"
    container_name: "traefik"
    restart: unless-stopped
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      #- "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.myresolver.acme.email=postmaster@example.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "443:443"
      - "80:80"
      - "8080:8080"
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  db:
    image: mariadb:10.6
    command: --transaction-isolation=READ-COMMITTED --log-bin=binlog --binlog-format=ROW
    restart: unless-stopped
    volumes:
      - db:/var/lib/mysql:Z
    environment:
      - =
      - MARIADB_AUTO_UPGRADE=1
      - MARIADB_DISABLE_UPGRADE_BACKUP=1
    env_file:
      - .env

  redis:
    image: redis:alpine
    restart: unless-stopped

  app:
    image: nextcloud:fpm-alpine
    restart: unless-stopped
    volumes:
      - ${NX_PATH}:/var/www/html:z
    environment:
      - MYSQL_HOST=db
      - REDIS_HOST=redis
    env_file:
      - .env
    depends_on:
      - db
      - redis

  web:
    build:
        context: ./web
        dockerfile: Dockerfile
    restart: unless-stopped
    volumes:
      - ${NX_PATH}:/var/www/html:z,ro
    environment:
      - VIRTUAL_HOST=${DOMAIN_NAME}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`nx.{$DOMAIN_NAME}`)"
      - "traefik.http.routers.whoami.entrypoints=websecure"
      - "traefik.http.routers.whoami.tls.certresolver=myresolver"
    depends_on:
      - app
    networks:
      - traefik

  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    # For DHCP it is recommended to remove these ports and instead add: network_mode: "host"
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp" # Only required if you are using Pi-hole as your DHCP server
    environment:
      TZ: 'Poland/Warsaw'
      # WEBPASSWORD: 'set a secure password here or it will be random'
    # Volumes store your data between container upgrades
    volumes:
      - 'pihole:/etc/pihole'
      - './dnsmasq.d:/etc/dnsmasq.d'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`pi.{$DOMAIN_NAME}`)"
      - "traefik.http.routers.whoami.entrypoints=websecure"
      - "traefik.http.routers.whoami.tls.certresolver=myresolver"
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    cap_add:
      - NET_ADMIN # Required if you are using Pi-hole as your DHCP server, else not needed
    restart: unless-stopped

  cron:
    build:
        context: ./cron
        dockerfile: Dockerfile
    restart: unless-stopped
    volumes:
      - ${NX_PATH}:/var/www/html:z
    depends_on:
      - db
      - redis

volumes:
  db:
  pihole:

networks:
  traefik:
    name: traefik